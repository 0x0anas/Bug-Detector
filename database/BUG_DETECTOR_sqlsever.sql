-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** onday-March-04-2024   
-- SQLINES DEMO *** ------------------------------------
   CREATE DATABASE BUG_DETECTOR;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_BLOG_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_BLOG_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_COMMENT_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_COMMENT_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_NOTIFICATION_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_NOTIFICATION_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_PAYMENT_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_PAYMENT_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_REPORT_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_REPORT_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_SCAN_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_SCAN_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_SUBSCRIPTION_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_SUBSCRIPTION_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_USER_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_USER_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO ***  SEQUENCE_VULNERABILITY_ID
-- SQLINES DEMO *** ------------------------------------

   CREATE SEQUENCE  "BUG_DETECTOR"."SEQUENCE_VULNERABILITY_ID"  MINVALUE 1 /* Warning: MAXVALUE 9999999999999999999999999999 */ INCREMENT BY 1 START WITH 1 NO CACHE   NO CYCLE  NOKEEP  NOSCALE  GLOBAL ;
-- SQLINES DEMO *** ------------------------------------
--  D... SQLINES DEMO ***
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[BLOG] 
   (	[BLOG_ID] FLOAT NOT NULL, 
	[TITLE] VARCHAR(255) NOT NULL, 
	[CONTENT] VARCHAR(max) NOT NULL, 
	[PUBLICATION_DATE] DATETIME DEFAULT getdate() not null, 
	[CATEGORY_ID] FLOAT, 
	[USER_ID] FLOAT NOT NULL, 
	[LIKE_NUMBER] FLOAT DEFAULT 0 NOT NULL, 
	[DISLIKE_NUMBEW] FLOAT DEFAULT 0 NOT NULL
   ) 
    ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** MMENTS
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[COMMENTS] 
   (	[COMMENT_ID] FLOAT NOT NULL, 
	[CONTENT] VARCHAR(max) NOT NULL, 
	[PUBLICATION_DATE] DATETIME DEFAULT getdate() not null, 
	[BLOG_ID] FLOAT NOT NULL, 
	[USER_ID] FLOAT NOT NULL
   ) 
    ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TIFICATION
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[NOTIFICATION] 
   (	[NOTIFICATION_ID] FLOAT NOT NULL, 
	[SENT_DATE] DATETIME DEFAULT getdate() not null, 
	[MASSAGE] VARCHAR(max) NOT NULL, 
	[NOTIFICATION_TYPE] VARCHAR(255) NOT NULL, 
	[TYPE_ID] FLOAT NOT NULL, 
	[USER_ID] FLOAT NOT NULL
   ) 
    ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** YMENT
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[PAYMENT] 
   (	[PAYMENT_ID] FLOAT DEFAULT NULL NOT NULL, 
	[PAYMENT_STATUS] VARCHAR(255) NOT NULL, 
	[USER_ID] FLOAT NOT NULL, 
	[PAYMENT_NUMDER] VARCHAR(16) NOT NULL, 
	[CVV] VARCHAR(3) NOT NULL, 
	[EXPAIR_DATE] VARCHAR(5) NOT NULL
   ) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** PORT
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[REPORT] 
   (	[REPORT_ID] FLOAT NOT NULL, 
	[REPORT_FILE] VARCHAR(255) NOT NULL, 
	[USER_ID] FLOAT NOT NULL, 
	[SCAN_ID] FLOAT NOT NULL, 
	[TYPE] FLOAT NOT NULL
   ) 
   ;
-- SQLINES DEMO *** ------------------------------------
--  D... SQLINES DEMO ***
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[SCAN] 
   (	[SCAN_ID] FLOAT NOT NULL, 
	[STATUS] VARCHAR(255) NOT NULL, 
	[TARGET] VARCHAR(255) NOT NULL, 
	[CREATED_AT] DATETIME DEFAULT getdate() not null, 
	[SCHEDLE] DATETIME, 
	[USER_ID] FLOAT NOT NULL, 
	[TYPE] FLOAT NOT NULL
   ) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BSCRIPTION
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[SUBSCRIPTION] 
   (	[SUBSCRIPTION_ID] FLOAT NOT NULL, 
	[SUBSCRIPTION_PLAN] VARCHAR(20) NOT NULL, 
	[EXPIRY_DATE] DATETIME2 (6) NOT NULL, 
	[PAYMENT_ID] FLOAT NOT NULL, 
	[USER_ID] FLOAT NOT NULL
   ) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** ER_INFO
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[USER_INFO] 
   (	[USER_ID] FLOAT NOT NULL, 
	[USER_NAME] VARCHAR(50) NOT NULL, 
	[PASSWORD] VARCHAR(50) NOT NULL, 
	[ROLE] VARCHAR(50) NOT NULL, 
	[CREATED_AT] DATETIME2 (6) DEFAULT GETDATE() NOT NULL, 
	[EMAIL] VARCHAR(255) NOT NULL
   ) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** LNERABILITY
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE TABLE [BUG_DETECTOR].[VULNERABILITY] 
   (	[VULNERABILITY_ID] FLOAT NOT NULL, 
	[DESCRIPTION] VARCHAR(max) NOT NULL, 
	[VULNERABILITY_TYPE] VARCHAR(255) NOT NULL, 
	[MITIGATION] VARCHAR(max) NOT NULL, 
	[SEVERITY] VARCHAR(255) NOT NULL, 
	[IMPACT] VARBINARY(max) NOT NULL
   ) 
    ;
-- INSERTING into BUG_DETECTOR.BLOG
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.COMMENTS
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.NOTIFICATION
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.PAYMENT
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.REPORT
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.SCAN
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.SUBSCRIPTION
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.USER_INFO
/* SET DEFINE OFF; */
-- INSERTING into BUG_DETECTOR.VULNERABILITY
/* SET DEFINE OFF; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** LNERABILITY_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [VULNERABILITY_PK_2] ON [BUG_DETECTOR].[VULNERABILITY] ([VULNERABILITY_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** YMENT_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [PAYMENT_PK_2] ON [BUG_DETECTOR].[PAYMENT] ([PAYMENT_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** B_SCAN_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [WEB_SCAN_PK_2] ON [BUG_DETECTOR].[SCAN] ([SCAN_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** OG_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [BLOG_PK_2] ON [BUG_DETECTOR].[BLOG] ([BLOG_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TIFICATION_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [NOTIFICATION_PK_2] ON [BUG_DETECTOR].[NOTIFICATION] ([NOTIFICATION_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** B_REPORT_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [WEB_REPORT_PK_2] ON [BUG_DETECTOR].[REPORT] ([REPORT_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** ER_INFO_UK1
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [USER_INFO_UK1_2] ON [BUG_DETECTOR].[USER_INFO] ([USER_NAME], [USER_ID], [EMAIL]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** LNERABILITY_UK1
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [VULNERABILITY_UK1_2] ON [BUG_DETECTOR].[VULNERABILITY] ([VULNERABILITY_TYPE]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** ER_INFO_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [USER_INFO_PK_2] ON [BUG_DETECTOR].[USER_INFO] ([USER_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** MMENTS_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [COMMENTS_PK_2] ON [BUG_DETECTOR].[COMMENTS] ([COMMENT_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** BSCRIPTION_PK
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  CREATE UNIQUE INDEX [SUBSCRIPTION_PK_2] ON [BUG_DETECTOR].[SUBSCRIPTION] ([SUBSCRIPTION_ID]) 
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_BLOG_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE BLOG ADD DEFAULT NEXT VALUE FOR sequence_BLOG_id.nextval FOR :NEW.BLOG_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_BLOG_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_COMMENT_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE COMMENTS ADD DEFAULT NEXT VALUE FOR sequence_COMMENT_id.nextval FOR :NEW.COMMENT_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_COMMENT_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_NOTIFICATION_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE NOTIFICATION ADD DEFAULT NEXT VALUE FOR sequence_NOTIFICATION_id.nextval FOR :NEW.NOTIFICATION_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_NOTIFICATION_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_PAYMENT_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE PAYMENT ADD DEFAULT NEXT VALUE FOR SEQUENCE_PAYMENT_ID.nextval FOR :NEW.PAYMENT_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_PAYMENT_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_REPORT_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE REPORT ADD DEFAULT NEXT VALUE FOR sequence_REPORT_id.nextval FOR :NEW.REPORT_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_REPORT_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_SCAN_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE SCAN ADD DEFAULT NEXT VALUE FOR sequence_SCAN_id.nextval FOR :NEW.SCAN_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_SCAN_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_SUBSCRIPTION_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE SUBSCRIPTION ADD DEFAULT NEXT VALUE FOR sequence_SUBSCRIPTION_id.nextval FOR :NEW.SUBSCRIPTION_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_SUBSCRIPTION_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_USER_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE USER_INFO ADD DEFAULT NEXT VALUE FOR sequence_USER_id.nextval FOR :NEW.USER_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_USER_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** TRIGGER_VULNERABILITY_ID
-- SQLINES DEMO *** ------------------------------------

  -- SQLINES LICENSE FOR EVALUATION USE ONLY
  ALTER TABLE VULNERABILITY ADD DEFAULT NEXT VALUE FOR sequence_VULNERABILITY_id.nextval FOR :NEW.VULNERABILITY_ID;
GO
/* ALTER TRIGGER "BUG_DETECTOR"."TRIGGER_VULNERABILITY_ID" ENABLE; */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table SCAN
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([SCAN_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([STATUS] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([TARGET] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([CREATED_AT] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[SCAN] ADD CONSTRAINT [WEB_SCAN_PK] PRIMARY KEY ([SCAN_ID])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SCAN] MODIFY ([TYPE] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table NOTIFICATION
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([NOTIFICATION_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([SENT_DATE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([MASSAGE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([NOTIFICATION_TYPE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([TYPE_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] ADD CONSTRAINT [NOTIFICATION_PK] PRIMARY KEY ([NOTIFICATION_ID])
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table SUBSCRIPTION
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] MODIFY ([SUBSCRIPTION_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] MODIFY ([SUBSCRIPTION_PLAN] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] MODIFY ([EXPIRY_DATE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] MODIFY ([PAYMENT_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] ADD CONSTRAINT [SUBSCRIPTION_PK] PRIMARY KEY ([SUBSCRIPTION_ID])
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table REPORT
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[REPORT] MODIFY ([REPORT_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[REPORT] MODIFY ([REPORT_FILE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[REPORT] MODIFY ([USER_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[REPORT] MODIFY ([SCAN_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[REPORT] ADD CONSTRAINT [WEB_REPORT_PK] PRIMARY KEY ([REPORT_ID])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[REPORT] MODIFY ([TYPE] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table COMMENTS
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[COMMENTS] MODIFY ([COMMENT_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[COMMENTS] MODIFY ([CONTENT] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[COMMENTS] MODIFY ([PUBLICATION_DATE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[COMMENTS] MODIFY ([BLOG_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[COMMENTS] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[COMMENTS] ADD CONSTRAINT [COMMENTS_PK] PRIMARY KEY ([COMMENT_ID])
   ;
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table USER_INFO
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([USER_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([USER_NAME] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([PASSWORD] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([ROLE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([CREATED_AT] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[USER_INFO] ADD CONSTRAINT [USER_INFO_PK] PRIMARY KEY ([USER_ID])
   ;
  ALTER TABLE [BUG_DETECTOR].[USER_INFO] ADD CONSTRAINT [USER_INFO_UK1] UNIQUE ([USER_NAME], [USER_ID], [EMAIL])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[USER_INFO] MODIFY ([EMAIL] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table BLOG
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([BLOG_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([TITLE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([CONTENT] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([PUBLICATION_DATE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[BLOG] ADD CONSTRAINT [BLOG_PK] PRIMARY KEY ([BLOG_ID])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([LIKE_NUMBER] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[BLOG] MODIFY ([DISLIKE_NUMBEW] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table PAYMENT
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([PAYMENT_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([PAYMENT_STATUS] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([PAYMENT_NUMDER] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([USER_ID] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[PAYMENT] ADD CONSTRAINT [PAYMENT_PK] PRIMARY KEY ([PAYMENT_ID])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([CVV] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[PAYMENT] MODIFY ([EXPAIR_DATE] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** Table VULNERABILITY
-- SQLINES DEMO *** ------------------------------------

  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([VULNERABILITY_ID] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([DESCRIPTION] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([VULNERABILITY_TYPE] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([MITIGATION] NOT NULL ENABLE); */
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([SEVERITY] NOT NULL ENABLE); */
  ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] ADD CONSTRAINT [VULNERABILITY_PK] PRIMARY KEY ([VULNERABILITY_ID])
   ;
  ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] ADD CONSTRAINT [VULNERABILITY_UK1] UNIQUE ([VULNERABILITY_TYPE])
   ;
  /* SQLines: Moved to CREATE TABLE
ALTER TABLE [BUG_DETECTOR].[VULNERABILITY] MODIFY ([IMPACT] NOT NULL ENABLE); */
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table BLOG
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[BLOG] ADD CONSTRAINT [BLOG_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table COMMENTS
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[COMMENTS] ADD CONSTRAINT [COMMENTS_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
  ALTER TABLE [BUG_DETECTOR].[COMMENTS] ADD CONSTRAINT [COMMENTS_FK2] FOREIGN KEY ([BLOG_ID])
	  REFERENCES [BUG_DETECTOR].[BLOG] ([BLOG_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table NOTIFICATION
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[NOTIFICATION] ADD CONSTRAINT [NOTIFICATION_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table PAYMENT
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[PAYMENT] ADD CONSTRAINT [PAYMENT_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table REPORT
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[REPORT] ADD CONSTRAINT [WEB_REPORT_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
  ALTER TABLE [BUG_DETECTOR].[REPORT] ADD CONSTRAINT [WEB_REPORT_FK2] FOREIGN KEY ([SCAN_ID])
	  REFERENCES [BUG_DETECTOR].[SCAN] ([SCAN_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table SCAN
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[SCAN] ADD CONSTRAINT [WEB_SCAN_FK1] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]);
-- SQLINES DEMO *** ------------------------------------
-- SQLINES DEMO *** for Table SUBSCRIPTION
-- SQLINES DEMO *** ------------------------------------

  ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] ADD CONSTRAINT [SUBSCRIPTION_FK1] FOREIGN KEY ([PAYMENT_ID])
	  REFERENCES [BUG_DETECTOR].[PAYMENT] ([PAYMENT_ID]);
  ALTER TABLE [BUG_DETECTOR].[SUBSCRIPTION] ADD CONSTRAINT [SUBSCRIPTION_FK2] FOREIGN KEY ([USER_ID])
	  REFERENCES [BUG_DETECTOR].[USER_INFO] ([USER_ID]) ;